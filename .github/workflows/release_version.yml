name: Staged release merged
on:
    pull_request:
        types:
            - closed
        branches:
            - 'main'
concurrency:
    group: publish_release
jobs:
    create-release:
        if: github.event.pull_request.merged == true && github.event.pull_request.head.sha == 'release-staging'
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3.0.0
              with:
                  fetch-depth: 0
                  token: ${{ secrets.GITHUB_TOKEN }}
                  ref: ${{ github.event.workflow_run.head_branch }}
            - name: Setup Node
              uses: actions/setup-node@v3.0.0
              with:
                  node-version: 16
                  registry-url: 'https://registry.npmjs.org'
            - name: Create Release Body
              id: get-pr-body
              run: |
                  node ./.github/extract-version.js
            - name: Bump version and push tag
              id: tag_version
              uses: mathieudutour/github-tag-action@v6.0
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  custom_tag: v${{ steps.get-pr-body.outputs.version }}
            - name: Create a GitHub release
              uses: ncipollo/release-action@v1.9.0
              with:
                  tag: ${{ steps.tag_version.outputs.new_tag }}
                  name: Release ${{ steps.tag_version.outputs.new_tag }}
                  body: ${{ steps.tag_version.outputs.changelog }}

  release_npm:
    runs-on: ubuntu-latest
    name: Publish Package to NPM
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
          ref:  ${{ github.event.workflow_run.head_branch }}
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'
      - name: Install Packages
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Build Package
        run: npm run build
      - name: Prepare Package
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}
      - name: Publish Packages
        run: npx lerna publish from-git -y --no-verify-access
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  release_github:
    needs: [build_suite]
    runs-on: ubuntu-latest
    name: Publish Package to GITHUB
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          fetch-depth: 0
          ref:  ${{ github.event.workflow_run.head_branch }}
      - name: Setup Node
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 16
      - name: Install Packages
        run: |
          npm ci
          npx lerna bootstrap --ci
      - name: Build Package
        run: npm run build
      - name: Prepare Package
        run: |
          npm config set //npm.pkg.github.com/:_authToken ${{ secrets.GITHUB_TOKEN }}
      - name: Publish Packages
        run: npx lerna publish from-package -y --no-verify-access --registry https://npm.pkg.github.com/donmahallem
